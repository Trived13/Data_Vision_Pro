import jwt from "jsonwebtoken";
import { action } from "./_generated/server";
import { v } from "convex/values";

const JWT_SECRET = process.env.JWT_SECRET || "your_jwt_secret";

export const verifyToken = action({
  args: {
    token: v.string(),
  },
  handler: async (ctx, { token }) => {
    try {
      const decoded = jwt.verify(token, JWT_SECRET) as jwt.JwtPayload;
      return decoded;
    } catch (error) {
      throw new Error("Invalid or expired token");
    }
  },
});

export const requireRole = (requiredRole: "Admin" | "Analyst" | "Viewer") => {
  return action({
    args: {
      token: v.string(),
    },
    handler: async (ctx, { token }) => {
      const decoded = await ctx.runAction(verifyToken, { token });
      if (decoded.role !== requiredRole) {
        throw new Error("Forbidden: Insufficient permissions");
      }
      return decoded;
    },
  });
};